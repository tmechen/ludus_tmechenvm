---
- name: Gather facts if needed
  ansible.builtin.setup:
  when: ansible_os_family is not defined

- name: Check for Windows
  ansible.builtin.fail:
    msg: tmechen VM only supports Windows
  when: ansible_os_family != "Windows"

- name: Get Windows version
  ansible.windows.win_shell: |
    $os = Get-CimInstance -ClassName Win32_OperatingSystem
    $version = [System.Version]$os.Version
    $versionString = "$($version.Major).$($version.Minor)"
    Write-Output $versionString
  register: win_version_output

- name: Get PowerShell version
  ansible.windows.win_shell: $PSVersionTable.PSVersion.Major
  register: ps_version_output

- name: Retrieve user account names
  ansible.windows.win_shell: Get-WmiObject Win32_UserAccount | Select-Object -ExpandProperty Name
  register: user_accounts_output

- name: Show user account names
  ansible.builtin.debug:
    var: user_accounts_output.stdout_lines

- name: Disable Windows Updates
  ansible.builtin.script:
    cmd: disable_updates.ps1

- name: Disable Defender 1
  ansible.windows.win_powershell:
    script: |
      Add-MpPreference -ExclusionPath 'C:\'

- name: Execute PowerShell script to check tamper protection status
  ansible.windows.win_shell: |
    (Get-MpComputerStatus).IsTamperProtected
  register: tamper_protection_result

- name: Set fact based on tamper protection status
  ansible.builtin.set_fact:
    tamper_protection_enabled: "{{ true if 'True' in tamper_protection_result.stdout else false }}"

- name: Disable Defender 2
  ansible.builtin.script:
    cmd: disable_defender.bat
  register: disable_defender
  when: tamper_protection_enabled

- name: Reboot after disabling Defender
  ansible.windows.win_reboot:
  when: tamper_protection_enabled